# ******************************************************************************
#
# vocutil, educational vocabulary utilities.
#
# Copyright 2022-2025 Jeremy A Gray <gray@flyquackswim.com>.
#
# All rights reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# ******************************************************************************

[tox]

envlist =
  clean-coverage
  py{310,311,312,313}
  lint
  report

isolated_build = True
skip_missing_interpreters = True
requires =
    pip>=20.0

[testenv]

description = Test supported environments.
deps =
  defusedxml
  pyfakefs
  pytest
commands =
  pytest --doctest-modules --doctest-glob='*.rst' -vvvv

[testenv:py313]

description = Generate test coverage data.
deps =
  defusedxml
  pyfakefs
  pytest
  pytest-cov
commands =
  pytest --doctest-modules --doctest-glob='*.rst' -vvvv --cov vocutil --cov-report term --cov-report html

[testenv:build]

description = Build packages.
deps =
  build
skip_install = true
commands =
  python3 -m build

[testenv:build-docs]

description = Generate documentation.
deps =
  Sphinx>=8
commands =
  sphinx-build -M clean docs docs/_build/html
  sphinx-build -b html -nW --keep-going -d docs/_build/.doctrees docs docs/_build/html
  sphinx-build -b html -nW --keep-going -d docs/_build/.doctrees docs docs/_build/html

[testenv:clean-coverage]

description = Erase previous test coverage data.
deps =
  coverage[TOML]
skip_install = true
commands =
  coverage erase

[testenv:lint]

description = Run all linting checks.
skip_install = True
deps =
  bandit[toml]
  black
  doc8
  flake8
  flake8-docstrings
  isort
  pydocstyle
  yesqa
commands =
  bandit --config pyproject.toml --recursive vocutil
  black --check --diff vocutil tests
  doc8
  flake8 vocutil tests
  isort --check --df vocutil tests
  pydocstyle
  yesqa

[testenv:lint-bandit]

description = Run bandit checks.
skip_install = True
deps =
  bandit[toml]
commands =
  bandit --config pyproject.toml --recursive vocutil

[testenv:lint-black]

description = Format python code with black.
skip_install = True
deps =
  black
commands =
    black --check --diff vocutil

[testenv:lint-doc8]

description = Run doc8 checks.
skip_install = True
deps =
  doc8
commands =
  doc8

[testenv:lint-fix]

description = Fix all automatically fixable linting issues.
skip_install = True
deps =
  black
  isort
commands =
    black vocutil
    isort vocutil

[testenv:lint-flake8]

description = Run flake8 checks.
skip_install = True
deps =
  flake8
  flake8-docstrings
commands =
    flake8 vocutil

[testenv:lint-isort]

description = Format module imports.
skip_install = True
deps =
  isort
commands =
    isort --check --df vocutil

[testenv:lint-pydocstyle]

description = Run pydocstyle checks.
skip_install = True
deps =
  pydocstyle
commands =
  pydocstyle

[testenv:lint-yesqa]

description = Find obsolete "# noqa" directives.
skip_install = True
deps =
  yesqa
commands =
  yesqa

[testenv:report]

description = Generate current test coverage report.
deps = coverage[TOML]
skip_install = true
commands =
  coverage report
  coverage html

[testenv:upload]

description = Upload packages to PyPI.
deps = twine
skip_install = true
commands =
  python3 -m twine upload --verbose dist/*

[testenv:upload-test]

description = Test upload of packages to PyPI.
deps = twine
skip_install = true
commands =
  python3 -m twine upload --verbose --repository testpypi dist/*
